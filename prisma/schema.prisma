generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model product {
  idproduct    Int      @id @default(autoincrement())
  name         String?  @db.VarChar(45)
  price        Int?
  descriptions String?  @db.VarChar(45)
  imageUrl     String?  @db.VarChar(255)
  createAt     DateTime @default(now())
  updateAt     DateTime @updatedAt
  
  CardItems    CartItem[]  

  @@map("products")
}

model Cart {
  id    Int     @id @default(autoincrement()) @map("_id") 
  items    CartItem[] 
  createAt     DateTime @default(now())
  updateAt     DateTime @updatedAt
  userId        String?
  user        User? @relation(fields: [userId],references: [id],onDelete:Cascade)
  @@map("carts")
}

model CartItem {
  id Int @id @default(autoincrement()) @map("_id")
  productid  Int 
  quantity Int
  cartId Int

  product    product @relation(fields: [productid], references: [idproduct],onDelete: Cascade)
  Card    Cart @relation(fields: [cartId],references: [id])
  @@map("cartitems")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  cart          Cart[]
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}